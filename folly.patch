diff --git a/CMake/folly-deps.cmake b/CMake/folly-deps.cmake
index df775c0..72ac1a6 100644
--- a/CMake/folly-deps.cmake
+++ b/CMake/folly-deps.cmake
@@ -2,6 +2,7 @@ include(CheckCXXSourceCompiles)
 include(CheckIncludeFileCXX)
 include(CheckFunctionExists)
 
+SET(BOOST_ROOT "${CONAN_BOOST_ROOT}")
 if(MSVC)
   set(Boost_USE_STATIC_LIBS ON) #Force static lib in msvc
 endif(MSVC)
@@ -24,6 +25,11 @@ find_package(DoubleConversion MODULE REQUIRED)
 list(APPEND FOLLY_LINK_LIBRARIES ${DOUBLE_CONVERSION_LIBRARY})
 list(APPEND FOLLY_INCLUDE_DIRECTORIES ${DOUBLE_CONVERSION_INCLUDE_DIR})
 
+find_package(Glog MODULE)
+set(FOLLY_HAVE_LIBGLOG ${GLOG_FOUND})
+list(APPEND FOLLY_LINK_LIBRARIES ${GLOG_LIBRARY})
+list(APPEND FOLLY_INCLUDE_DIRECTORIES ${GLOG_INCLUDE_DIR})
+
 find_package(Gflags MODULE)
 set(FOLLY_HAVE_LIBGFLAGS ${LIBGFLAGS_FOUND})
 list(APPEND FOLLY_LINK_LIBRARIES ${LIBGFLAGS_LIBRARY})
@@ -31,11 +37,6 @@ list(APPEND FOLLY_INCLUDE_DIRECTORIES ${LIBGFLAGS_INCLUDE_DIR})
 list(APPEND CMAKE_REQUIRED_LIBRARIES ${LIBGFLAGS_LIBRARY})
 list(APPEND CMAKE_REQUIRED_INCLUDES ${LIBGFLAGS_INCLUDE_DIR})
 
-find_package(Glog MODULE)
-set(FOLLY_HAVE_LIBGLOG ${GLOG_FOUND})
-list(APPEND FOLLY_LINK_LIBRARIES ${GLOG_LIBRARY})
-list(APPEND FOLLY_INCLUDE_DIRECTORIES ${GLOG_INCLUDE_DIR})
-
 find_package(LibEvent MODULE REQUIRED)
 list(APPEND FOLLY_LINK_LIBRARIES ${LIBEVENT_LIB})
 list(APPEND FOLLY_INCLUDE_DIRECTORIES ${LIBEVENT_INCLUDE_DIR})
diff --git a/build/fbcode_builder/CMake/FindGflags.cmake b/build/fbcode_builder/CMake/FindGflags.cmake
index 246ceac..7ad6562 100644
--- a/build/fbcode_builder/CMake/FindGflags.cmake
+++ b/build/fbcode_builder/CMake/FindGflags.cmake
@@ -48,9 +48,14 @@ if (gflags_FOUND)
 else()
   FIND_PATH(LIBGFLAGS_INCLUDE_DIR gflags/gflags.h)
 
-  FIND_LIBRARY(LIBGFLAGS_LIBRARY_DEBUG NAMES gflagsd gflags_staticd)
-  FIND_LIBRARY(LIBGFLAGS_LIBRARY_RELEASE NAMES gflags gflags_static)
-
+if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
+  FIND_LIBRARY(LIBGFLAGS_LIBRARY_DEBUG NAMES gflagsd gflags_nothreads_staticd PATHS ${CONAN_GFLAGS_ROOT})
+  FIND_LIBRARY(LIBGFLAGS_LIBRARY_RELEASE NAMES gflags gflags_nothreads_static PATHS ${CONAN_GFLAGS_ROOT})
+else()
+  FIND_LIBRARY(LIBGFLAGS_LIBRARY_DEBUG NAMES gflags gflags_nothreads PATHS ${CONAN_GFLAGS_ROOT})
+  FIND_LIBRARY(LIBGFLAGS_LIBRARY_RELEASE NAMES gflags_nothreads gflags PATHS ${CONAN_GFLAGS_ROOT})
+endif()
+ 
   INCLUDE(SelectLibraryConfigurations)
   SELECT_LIBRARY_CONFIGURATIONS(LIBGFLAGS)
 
diff --git a/build/fbcode_builder/CMake/FindGlog.cmake b/build/fbcode_builder/CMake/FindGlog.cmake
index a589b2e..0c2fbfe 100644
--- a/build/fbcode_builder/CMake/FindGlog.cmake
+++ b/build/fbcode_builder/CMake/FindGlog.cmake
@@ -8,8 +8,8 @@
 
 include(FindPackageHandleStandardArgs)
 
-find_library(GLOG_LIBRARY glog
-  PATHS ${GLOG_LIBRARYDIR})
+find_library(GLOG_LIBRARY glog glogd
+  PATHS ${CONAN_GLOG_ROOT})
 
 find_path(GLOG_INCLUDE_DIR glog/logging.h
   PATHS ${GLOG_INCLUDEDIR})
diff --git a/build/fbcode_builder/CMake/FindLibEvent.cmake b/build/fbcode_builder/CMake/FindLibEvent.cmake
index dd11ebd..9ef0807 100644
--- a/build/fbcode_builder/CMake/FindLibEvent.cmake
+++ b/build/fbcode_builder/CMake/FindLibEvent.cmake
@@ -50,7 +50,7 @@ if (TARGET event)
   endif()
 else()
   find_path(LIBEVENT_INCLUDE_DIR event.h PATHS ${LibEvent_INCLUDE_PATHS})
-  find_library(LIBEVENT_LIB NAMES event PATHS ${LibEvent_LIB_PATHS})
+  find_library(LIBEVENT_LIB NAMES event libevent PATHS ${CONAN_LIBEVENT_ROOT})
 
   if (LIBEVENT_LIB AND LIBEVENT_INCLUDE_DIR)
     set(LibEvent_FOUND TRUE)
diff --git a/folly/portability/PThread.cpp b/folly/portability/PThread.cpp
index 2891c4c..03019f3 100644
--- a/folly/portability/PThread.cpp
+++ b/folly/portability/PThread.cpp
@@ -18,6 +18,9 @@
 
 #if !FOLLY_HAVE_PTHREAD && _WIN32
 #include <boost/thread/tss.hpp> // @manual
+#include <boost/thread/exceptions.hpp>
+#include <boost/shared_ptr.hpp>
+#include <boost/thread/thread_only.hpp>
 
 #include <errno.h>
 
@@ -28,6 +31,7 @@
 #include <mutex>
 #include <shared_mutex>
 #include <thread>
+#include <atomic>
 
 #include <folly/lang/Assume.h>
 #include <folly/portability/Windows.h>
@@ -683,7 +687,7 @@ int pthread_setspecific(pthread_key_t key, const void* value) {
     // function, which we don't want to do.
     boost::detail::set_tss_data(
         realKey,
-        boost::shared_ptr<boost::detail::tss_cleanup_function>(),
+        0,0,
         const_cast<void*>(value),
         false);
     return 0;
diff --git a/folly/portability/Windows.h b/folly/portability/Windows.h
index f7990ca..b22fac5 100644
--- a/folly/portability/Windows.h
+++ b/folly/portability/Windows.h
@@ -26,16 +26,12 @@
 // These have to be this way because we define our own versions
 // of close(), because the normal Windows versions don't handle
 // sockets at all.
-#ifndef __STDC__
-/* nolint */
-#define __STDC__ 1
-#include <direct.h> // @manual nolint
-#include <io.h> // @manual nolint
-#undef __STDC__
-#else
-#include <direct.h> // @manual nolint
-#include <io.h> // @manual nolint
-#endif
+#include <corecrt.h>
+#pragma push_macro("_CRT_INTERNAL_NONSTDC_NAMES")
+#define _CRT_INTERNAL_NONSTDC_NAMES 0
+#include <direct.h>
+#include <io.h>
+#pragma pop_macro("_CRT_INTERNAL_NONSTDC_NAMES")
 
 #if defined(min) || defined(max)
 #error Windows.h needs to be included by this header, or else NOMINMAX needs \
